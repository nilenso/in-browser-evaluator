["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$cljs.analyzer","^J","~$ana","^J","~$cljs.env","^L","~$env","^L","~$cljs.core","^N","~$goog","^O"],"~:seen",["^>",["~:require"]],"~:shadow/js-access-global",["^>",["Error"]],"~:uses",null,"~:defs",["^ ","^?",["^ ","~:protocol-inline",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",220,"^6",7,"^7",220,"^8",14,"~:arglists",["~#list",["~$quote",["^W",[["~$sym"],["~$state","^Y"]]]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^Y"],["^Z","^Y"]],"^V",["^W",[["^Y"],["^Z","^Y"]]],"~:arglists-meta",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/find-ns","^4","cljs/analyzer/api.cljc","^8",14,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",[["^Y"],["^Z","^Y"]],"^V",["^W",[["^Y"],["^Z","^Y"]]],"^14",["^W",[null,null]]],"^13",[["^Y"],["^Z","^Y"]],"~:protocol-impl",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"~:methods",[["^ ","^11",1,"^10",false,"~:tag","~$any"],["^ ","^11",2,"^10",false,"^18",["^>",[null,"^19"]]]],"^5",220,"^7",220,"^12",2,"~:fn-var",true,"^V",["^W",[["^Y"],["^Z","^Y"]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^@",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",262,"^6",7,"^7",262,"^8",16,"^V",["^W",["^X",["^W",[["~$ns"],["^Z","^1;"]]]]],"^3","Removes the namespace named by the symbol.","^[",["^ ","^10",false,"^11",2,"^12",2,"^13",[["^1;"],["^Z","^1;"]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/remove-ns","^4","cljs/analyzer/api.cljc","^8",16,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",[["^1;"],["^Z","^1;"]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]],"^13",[["^1;"],["^Z","^1;"]],"^16",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",1,"^10",false,"^18","^19"],["^ ","^11",2,"^10",false,"^18",["^>",[null,"^19"]]]],"^5",262,"^7",262,"^12",2,"^1:",true,"^V",["^W",[["^1;"],["^Z","^1;"]]],"^3","Removes the namespace named by the symbol."],"^A",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",240,"^6",7,"^7",240,"^8",17,"^V",["^W",["^X",["^W",[["^1;"],["^Z","^1;"]]]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^[",["^ ","^10",false,"^11",2,"^12",2,"^13",[["^1;"],["^Z","^1;"]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/ns-publics","^4","cljs/analyzer/api.cljc","^8",17,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",[["^1;"],["^Z","^1;"]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]],"^13",[["^1;"],["^Z","^1;"]],"^16",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",1,"^10",false,"^18","^19"],["^ ","^11",2,"^10",false,"^18",["^>",[null,"~$clj","^19"]]]],"^5",240,"^7",240,"^12",2,"^1:",true,"^V",["^W",[["^1;"],["^Z","^1;"]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",102,"^6",7,"^7",102,"^8",18,"^V",["^W",["^X",["^W",[[],["^Z"]]]]],"^3","Return the compiler options from compiler state.","^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^Z"]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/get-options","^4","cljs/analyzer/api.cljc","^8",18,"^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^Z"]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]],"^13",[[],["^Z"]],"^16",null,"^11",1,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",0,"^10",false,"^18","^19"],["^ ","^11",1,"^10",false,"^18",["^>",["^19","~$clj-nil"]]]],"^5",102,"^7",102,"^12",1,"^1:",true,"^V",["^W",[[],["^Z"]]],"^3","Return the compiler options from compiler state."],"~$warning-message",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",91,"^6",7,"^7",91,"^8",22,"^V",["^W",["^X",["^W",[["~$warn-type","~$warn-info"]]]]],"^3","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"^F","~$cljs.analyzer.api/warning-message","^4","cljs/analyzer/api.cljc","^8",22,"^13",["^W",[["^1C","^1D"]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",91,"~:ret-tag","^19","^7",91,"^12",2,"^1:",true,"^V",["^W",["^X",["^W",[["^1C","^1D"]]]]],"^3","Helper for generating the standard analyzer messages for warnings. Should be\n  passed warn-type and warn-info. See with-warning-handlers."],"~$warning-enabled?",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",69,"^6",7,"^7",69,"^8",23,"^V",["^W",["^X",["^W",[["~$warning-type"]]]]],"^3","Test if the given warning-type is enabled."],"^F","~$cljs.analyzer.api/warning-enabled?","^4","cljs/analyzer/api.cljc","^8",23,"^13",["^W",[["^1H"]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",69,"^1F","^19","^7",69,"^12",1,"^1:",true,"^V",["^W",["^X",["^W",[["^1H"]]]]],"^3","Test if the given warning-type is enabled."],"~$current-state",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",36,"^6",7,"^7",36,"^8",20,"^V",["^W",["^X",["^W",[[]]]]],"^3","Return the current compiler state atom."],"^F","~$cljs.analyzer.api/current-state","^4","cljs/analyzer/api.cljc","^8",20,"^13",["^W",[[]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",36,"^1F","^19","^7",36,"^12",0,"^1:",true,"^V",["^W",["^X",["^W",[[]]]]],"^3","Return the current compiler state atom."],"^B",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",253,"^6",7,"^7",253,"^8",17,"^V",["^W",["^X",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^[",["^ ","^10",false,"^11",3,"^12",3,"^13",[["^1;","^Y"],["^Z","^1;","^Y"]],"^V",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/ns-resolve","^4","cljs/analyzer/api.cljc","^8",17,"^[",["^ ","^10",false,"^11",3,"^12",3,"^13",[["^1;","^Y"],["^Z","^1;","^Y"]],"^V",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^14",["^W",[null,null]]],"^13",[["^1;","^Y"],["^Z","^1;","^Y"]],"^16",null,"^11",3,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",2,"^10",false,"^18","^19"],["^ ","^11",3,"^10",false,"^18",["^>",[null,"^19"]]]],"^5",253,"^7",253,"^12",3,"^1:",true,"^V",["^W",[["^1;","^Y"],["^Z","^1;","^Y"]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$enabled-warnings",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",97,"^6",7,"^7",97,"^8",23,"^V",["^W",["^X",["^W",[[]]]]],"^3","Get the enabled warning types."],"^F","~$cljs.analyzer.api/enabled-warnings","^4","cljs/analyzer/api.cljc","^8",23,"^13",["^W",[[]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",97,"^1F","^19","^7",97,"^12",0,"^1:",true,"^V",["^W",["^X",["^W",[[]]]]],"^3","Get the enabled warning types."],"~$empty-state",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",25,"^6",7,"^7",25,"^8",18,"^V",["^W",["^X",["^W",[[],["~$opts"]]]]],"^3","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options","^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^1P"]],"^V",["^W",[[],["^1P"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/empty-state","^4","cljs/analyzer/api.cljc","^8",18,"^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^1P"]],"^V",["^W",[[],["^1P"]]],"^14",["^W",[null,null]]],"^13",[[],["^1P"]],"^16",null,"^11",1,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",0,"^10",false,"^18","^19"],["^ ","^11",1,"^10",false,"^18","~$cljs.core/Atom"]],"^5",25,"^7",25,"^12",1,"^1:",true,"^V",["^W",[[],["^1P"]]],"^3","Creates an empty compilation state Atom<Map>. The optional opts arg is a map\n   representing the compiler configuration. See the documentation\n   for details: https://clojurescript.org/reference/compiler-options"],"~$default-passes",["^ ","^2",["^ ","^4","cljs/analyzer/api.cljc","^5",117,"^6",3,"^7",117,"^8",17,"^3","ClojureScript's default analysis passes."],"^F","~$cljs.analyzer.api/default-passes","^4","cljs/analyzer/api.cljc","^8",17,"^6",1,"^5",115,"^7",117,"^18","~$cljs.core/IVector","^3","ClojureScript's default analysis passes."],"~$empty-env",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",57,"^6",7,"^7",57,"^8",16,"^V",["^W",["^X",["^W",[[]]]]],"^3","Creates an empty analysis environment."],"^F","~$cljs.analyzer.api/empty-env","^4","cljs/analyzer/api.cljc","^8",16,"^13",["^W",[[]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",57,"^1F","^19","^7",57,"^12",0,"^1:",true,"^V",["^W",["^X",["^W",[[]]]]],"^3","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",74,"^6",7,"^7",74,"^8",30,"^V",["^W",["^X",["^W",[["^1H","^M","~$extra"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^F","~$cljs.analyzer.api/default-warning-handler","^4","cljs/analyzer/api.cljc","^8",30,"^13",["^W",[["^1H","^M","^1Y"]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",74,"^1F",["^>",[null,"^1A"]],"^7",74,"^12",3,"^1:",true,"^V",["^W",["^X",["^W",[["^1H","^M","^1Y"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^C",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",229,"^6",7,"^7",229,"^8",17,"^V",["^W",["^X",["^W",[["^1;"],["^Z","^1;"]]]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^[",["^ ","^10",false,"^11",2,"^12",2,"^13",[["^1;"],["^Z","^1;"]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/ns-interns","^4","cljs/analyzer/api.cljc","^8",17,"^[",["^ ","^10",false,"^11",2,"^12",2,"^13",[["^1;"],["^Z","^1;"]],"^V",["^W",[["^1;"],["^Z","^1;"]]],"^14",["^W",[null,null]]],"^13",[["^1;"],["^Z","^1;"]],"^16",null,"^11",2,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",1,"^10",false,"^18","^19"],["^ ","^11",2,"^10",false,"^18",["^>",["^19","^1A"]]]],"^5",229,"^7",229,"^12",2,"^1:",true,"^V",["^W",[["^1;"],["^Z","^1;"]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^D",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",212,"^6",7,"^7",212,"^8",13,"^V",["^W",["^X",["^W",[[],["^Z"]]]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^Z"]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/all-ns","^4","cljs/analyzer/api.cljc","^8",13,"^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^Z"]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]],"^13",[[],["^Z"]],"^16",null,"^11",1,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",0,"^10",false,"^18","^19"],["^ ","^11",1,"^10",false,"^18",["^>",["~$cljs.core/KeySeq","^1A"]]]],"^5",212,"^7",212,"^12",1,"^1:",true,"^V",["^W",[[],["^Z"]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"~$current-file",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",41,"^6",7,"^7",41,"^8",19,"^V",["^W",["^X",["^W",[[]]]]],"^3","Return the current file under analysis or compilation."],"^F","~$cljs.analyzer.api/current-file","^4","cljs/analyzer/api.cljc","^8",19,"^13",["^W",[[]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",41,"^1F","^19","^7",41,"^12",0,"^1:",true,"^V",["^W",["^X",["^W",[[]]]]],"^3","Return the current file under analysis or compilation."],"~$current-ns",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",46,"^6",7,"^7",46,"^8",17,"^V",["^W",["^X",["^W",[[]]]]],"^3","Return the current ns under analysis or compilation."],"^F","~$cljs.analyzer.api/current-ns","^4","cljs/analyzer/api.cljc","^8",17,"^13",["^W",[[]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",46,"^1F","^19","^7",46,"^12",0,"^1:",true,"^V",["^W",["^X",["^W",[[]]]]],"^3","Return the current ns under analysis or compilation."],"^E",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",200,"^6",7,"^7",200,"^8",14,"^V",["^W",["^X",["^W",[["^M","^Y"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^F","~$cljs.analyzer.api/resolve","^4","cljs/analyzer/api.cljc","^8",14,"^13",["^W",[["^M","^Y"]]],"^16",null,"^14",["^W",[null,null]],"^6",1,"^10",false,"^5",200,"^7",200,"^12",2,"^1:",true,"^V",["^W",["^X",["^W",[["^M","^Y"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^U",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",108,"^6",7,"^7",108,"^8",19,"^V",["^W",["^X",["^W",[[],["^Z"]]]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^Z"]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]]],"^F","~$cljs.analyzer.api/get-js-index","^4","cljs/analyzer/api.cljc","^8",19,"^[",["^ ","^10",false,"^11",1,"^12",1,"^13",[[],["^Z"]],"^V",["^W",[[],["^Z"]]],"^14",["^W",[null,null]]],"^13",[[],["^Z"]],"^16",null,"^11",1,"^14",["^W",[null,null]],"^6",1,"^10",false,"^17",[["^ ","^11",0,"^10",false,"^18","^19"],["^ ","^11",1,"^10",false,"^18",["^>",["^19","^1A"]]]],"^5",108,"^7",108,"^12",1,"^1:",true,"^V",["^W",[[],["^Z"]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:require-macros",["^ ","^N","^N"],"~:cljs.analyzer/constants",["^ ","^P",["^>",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^T","~:options"]],"~:order",["^2?","^2>","^2;","^2=","^T","^2<"]],"~:flags",["^ ","^Q",["^>",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^J","^L"]]